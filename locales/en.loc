
' English translation
' Author: Tim Howard
' Updated: March 13, 2010

name		"English"
nativename	"English"

arg {
	help {
		usage "description: List Maximus' usage, commands and options, or specific information on a single command
				usage: maximus [--help|help [command(s)]]"
		fullusage "maximus usage: maximus [--modpath ~q/path/to/mods~q] [--help [command]] [-v|-version] COMMAND [ARGS]
					The most commonly used commands:
					~tinstall~tInstall the given set modules
					~tremove~tRemove the given set of modules
					~tupdate~tUpdate sources file
					~tlist~tList the module scopes and modules
					~thelp~tGet help on a specific command
					Try 'maximus help <command>' for more information on a specific command."
		cmdnotfound "Command not found"
	}
	version {
		usage "description: Report Maximus' version
				usage: maximus [-v|-version|version]"
		report "Maximus version {version}"
	}
	list {
		usage "description: List all module scopes and their modules
				usage: maximus list [modscopes|modules]"
		nosources "The sources list contains no modules."
		unfound "The following scope(s)/module(s) were not found:"
	}
	update {
		usage "description: Retrieve latest sources
				usage: maximus update [--url ~qhttp://some/url~q]
				options: --url (override sources url)"
		autoupdate "Automatically updating old sources..."
	}
	modpath {
		usage "description: Override the module path
				usage: maximus --modpath ~q/path/to/mods~q"
	}
	install {
		usage "description: Install the given set of modules
				usage: maximus install [-nounpack] [-nobuild] [-keeptemp] [-nothreaded] [-makedocs] modules
				options: -nounpack (don't unpack archives), -nobuild (don't build modules), -keeptemp (don't remove 'tmp/' directory)
				-nothreaded (don't build threaded), -makedocs (build documentation), -force (force install when dependencies are not met)"
		modulestoinstall "The following module(s) will be installed:"
		nomodulestoinstall "No modules to be installed"
		continuewithinstall "Continue with install? [y/n]"
		missingdeps "Continue with install? (will not build, and missing dependencies will not be installed) [y/n]"
		notfound {
			instdeps "The following dependencies cannot be installed because they are neither in the sources list nor are they already installed:"
			instmods "The following modules cannot be installed because they are not in the sources list:"
			version "'{module}' does not have a version called '{version}'"
		}
	}
}

error {
	suggesthelp "See 'maximus --help'."
	createperms "Unable to create '{path}'; do you have sufficient permissions?"
	writeperms "Unable to write '{path}'; do you have sufficient permissions?"
	fetch {
		archive "Failed to fetch archive
				~tReason: {reason}"
		sources "Failed to fetch sources
				~tReason: {reason}"
	}
	install {
		openarchive "Failed to open archive '{archivepath}'"
		build "Failed to build {scope}"
		nosources "Cannot install modules as there is no sources list (see maximus --help update)"
	}
	list {
		nosources "Cannot list modules as there is no sources list  (see maximus --help update)"
	}
	load {
		sources {
			file "Failed to load sources from '{file}'"
			parse "Caught parser exception:~n{exception}"
		}
		config {
			parse "Unable to parse configuration file: {file}"
			unkiden "Unknown identifier in config: {name}"
		}
		locale {
			file "Failed to open locale file: {file}"
			parse "Failed to parse locale file: {file}
					~tReason: {reason}"
		}
	}
	update {
		nourl "No url set for sources list (try --url or see config/help)"
	}
	notfound {
		maxenv "Unable to determine the path to BlitzMax!
				Have you set the 'BMXPATH' environment variable?"
		maxpath "BlitzMax path not found: ~q{maxpath}~q"
		modpath "Module path not found: ~q{modpath}~q"
		bmk "Path to bmk not found: ~q{bmkpath}~q"
	}
	sources {
		setfile "Sources file path cannot be empty!"
	}
	option {
		unknown "'{option}' is not a known option."
		doesnottakeparams "The '{option}' option does not take parameters."
		requiresparams "The '{option}' option requires parameters."
	}
	command {
		unknown "'{command}' is not a known command."
		doesnottakeparams "The '{command}' command does not take parameters."
		requiresparams "The '{command}' command requires parameters."
	}
}

message {
	warning "[WARNING] {warning}"
	error "[ERROR] {error}"
	setmodpath "Module path set to ~q{modpath}~q"
	fetch {
		done "done [{responsecode}]"
		alreadyfetched "already fetched."
	}
	unpacking "Unpacking {archivepath}..."
	skipping {
		unpack "Skipping unpack"
		build "Skipping build"
		install "Skipping install"
	}
}

